(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{305:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("在使用 "),a("a",{attrs:{href:"https://www.jeffjade.com/tags/Git/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Git"),a("OutboundLink")],1),s._v(" 这款版本控制工具，来管理项目代码，蛮多的时候，会涉及到“删除 Git 仓库新增修改”这样的诉求；如果能快速优雅做到，将会促进开发效率；这篇文章即在于，从不同诉求角度，来逐一探讨：“如何快速删除 Git 仓库新增修改”。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://image.nicelinks.site/how-to-quickly-delete-git-repository-new-changes.jpeg",alt:"如何快速删除 Git 仓库新增修改"}})]),s._v(" "),a("h2",{attrs:{id:"只删除已追踪的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只删除已追踪的文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 只删除已追踪的文件")]),s._v(" "),a("p",[s._v("在 Git 项目中，可以在  "),a("code",[s._v(".gitignore")]),s._v(" 文件，对一些不需要提交到代码仓库的文件（夹）加以忽视；对于这类文件，还有尚未提交到"),a("code",[s._v("本地暂存区")]),s._v("的内容，都是未追踪文件（untracked files），在处理时候，方式略有不同。如果只是删除已追踪的文件，可以有以下两种方法：")]),s._v(" "),a("h3",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout","aria-hidden":"true"}},[s._v("#")]),s._v(" git checkout")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有已追踪修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- your-modified-filename\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定文件夹内所有已追踪修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- your-modified-dir\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset","aria-hidden":"true"}},[s._v("#")]),s._v(" git reset")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有已追踪修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash","aria-hidden":"true"}},[s._v("#")]),s._v(" git stash")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所已追踪修改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash drop  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在用这种方法时候，还需要考虑“储藏区”是否有其他内容；很明显可以看出来，使用 "),a("code",[s._v("git checkout")]),s._v(" 是最为灵活且快捷的方式。")]),s._v(" "),a("h2",{attrs:{id:"只删除未追踪的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#只删除未追踪的文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 只删除未追踪的文件")]),s._v(" "),a("p",[s._v("对于新增了一个未追踪的文件，直接在控制台、编辑器，就可以手动移除；但，如果是很多个，就需要用些方法，才会更加高效。比较推荐的方法是使用 "),a("code",[s._v("git clean")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 untracked files")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -f\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连 untracked 的目录也一起删掉   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -fd\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连 gitignore 的 untrack 文件/目录也一起删掉 （慎用）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -xfd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("可以根据自己的诉求，附带合适的参数来运行命令；一般采用 "),a("code",[s._v("git clean -fd")]),s._v(" 即可。但，为数据安全烤箱，强烈建议在运行删除命令前，加上 "),a("code",[s._v("-n")]),s._v(" 参数，先看看会删掉哪些文件，以防止重要文件被误删。如下面示例：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -nfd\n// Would remove xxx\n// Would remove yyy\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"删除本地修改的所有文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除本地修改的所有文件","aria-hidden":"true"}},[s._v("#")]),s._v(" 删除本地修改的所有文件")]),s._v(" "),a("p",[s._v("对于所做的修改，却还没有提交（"),a("code",[s._v("git add")]),s._v("）的内容，结合上面👆的总结，运行如下命令即可：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -fd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -xfd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果有些内容，已经 "),a("code",[s._v("git add")]),s._v(" 添加至暂存区，也要丢弃删除的话，可以如下操作：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -fd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -xfd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("倘若说部分内容，用 "),a("code",[s._v("git commit")]),s._v(" 将暂存区里的改动给提交到本地的版本库，也要丢弃删除的话，可以如下操作：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard HEAD^ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -fd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard Last-Commit-ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -fd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("以上，即对"),a("a",{attrs:{href:""}},[s._v("如何快速删除 Git 仓库新增修改")]),s._v("的一些总结，如有更加便捷的办法，欢迎留言相告。")]),s._v(" "),a("p",[s._v("@2019-11-02 于深圳.福田 Last Modify：2019-11-02")]),s._v(" "),a("blockquote",[a("p",[s._v("原文首链："),a("a",{attrs:{href:"https://quickapp.lovejade.cn/how-to-quickly-delete-git-repository-new-changes",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何快速删除 Git 仓库新增修改"),a("OutboundLink")],1)])]),s._v(" "),a("Advertisement")],1)},[],!1,null,null,null);t.default=n.exports}}]);